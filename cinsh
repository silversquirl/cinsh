#!/bin/sh

# Override in config to provide custom podman options
podman_run() {
	podman run --ulimit host "$@"
}

# Override in config to use a different container system
run_container() {
	podman_run \
		--mount type=bind,src="$1",dst=/cinsh,rw \
		-i -w /cinsh "$2" "$3"
}

# Config is just a shell script
[ -e /etc/cinsh.conf ] && . /etc/cinsh.conf

if [ "$#" -eq 0 ]; then
	echo 'Usage: cinsh TASK_NAME'
	exit 1
fi

if command -v tput >/dev/null 2>&1; then
	bold="$(tput bold)"
	red="$(tput setaf 1)"
	reset="$(tput sgr0)"
fi

mkdir -p .cinsh/store .cinsh/output || exit
store="$PWD/.cinsh/store/$$"
out="$PWD/.cinsh/output/$$"
mkdir "$store" "$out" || exit

atexit() {
	rm -rf "$store"
	rmdir "$(dirname "$store")" 2>/dev/null
}
trap atexit EXIT

cinsh_run() {
	task="$PWD/.cinsh/task/$1"

	[ -d "$store/$1/" ] && return
	mkdir -p "$store/$1/" || exit
	(cd "$task"; cp -a . "$store/$1/") || exit

	meta=
	container=
	has_output=

	exec 3<"$task/conf"
	while read -r opt a b <&3; do
		case "$opt" in
			container)
				container="$a"
				;;

			meta)
				meta=y
				;;

			dep)
				(cinsh_run "$a") || exit
				if [ -n "$b" ]; then
					cp -a "$store/$a/$b" "$store/$1/" || exit
				fi
				;;

			out)
				has_output=y
				;;

			*)
				echo "[$1] Error: Unrecognized config option '$opt'. Ignored" >&2
				;;
		esac
	done

	if [ -n "$meta" ] && [ -n "$container" ]; then
		echo "[$1] Error: meta and container options are mutually exclusive" >&2
		exit 1
	fi

	if [ -z "$meta" ]; then
		if [ -z "$container" ]; then
			echo "[$1] Error: Container not specified"
			exit 1
		fi

		echo "$bold[$1]$reset"
		if ! run_container "$store/$1/" "$container" ./run; then
			echo "$bold$red------ TASK $1 FAILED ------$reset"
			exit 1
		fi
		echo
	fi

	if [ -n "$has_output" ]; then
		while read -r opt a b; do
			case "$opt" in
				out)
					b="${b:-"$a"}"
					mkdir -p "$(dirname "$out/$b")"
					cp -a "$store/$1/$a" "$out/$b" || exit
					;;
			esac
		done <"$task/conf"
	fi
}

for t; do
	cinsh_run "$t"
done
